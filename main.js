!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},p:""};e.d({},{M:function(){return J}});var t=e.p+"57b0e94d1f56f5818193.jpg",n=e.p+"5d857cfbb2261e7c3927.png",r=e.p+"480362b8a46058446c75.jpg",o=e.p+"f0fc0e9e5ca3cbf0844c.jpg",i=e.p+"7ba2b86cd65744fa6c26.jpg",u=e.p+"b264bbbfba5cfb586e75.webp";function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.selector=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this.selector.classList.add("modal-opened")}},{key:"close",value:function(){this.selector.classList.remove("modal-opened")}},{key:"_handleEscClose",value:function(){this.close(),J.classList.remove("page_opacity")}},{key:"setEventListeners",value:function(){this.close(),J.classList.remove("page_opacity")}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(n=[{key:"open",value:function(){this.selector.classList.add("modal-image__active")}},{key:"close",value:function(){this.selector.classList.remove("modal-image__active")}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==v(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===v(o)?o:String(o)),r)}var o}var b=document.querySelector(".modal-image"),_=document.querySelector(".modal-image__image"),h=document.querySelector(".modal-image__button"),g=document.querySelector(".modal-image__title"),S=document.querySelector(".page"),w=new p(".modal-image"),E=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._imageLink=t,this._imageTitle=n,this._element=this._getTemplate(),this._setEventListeners()}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(".card-template").content.querySelector(".element").cloneNode(!0)}},{key:"handleClick",value:function(){var e=this._element.querySelector(".element__image").getAttribute("src");_.setAttribute("src",e);var t=this._element.querySelector(".element__image").getAttribute("alt");_.setAttribute("alt",t);var n=this._element.querySelector(".element__title").textContent;g.textContent=n,w.open(),S.classList.add("page_opacity")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button").addEventListener("click",(function(e){e.target.classList.toggle("element__button_active")})),this._element.querySelector(".element__delete").addEventListener("click",(function(){e._element.remove()})),this._element.querySelector(".element__image").addEventListener("click",this.handleClick.bind(this)),h.addEventListener("click",(function(){b.classList.remove("modal-image__active"),S.classList.remove("page_opacity")}))}},{key:"generateCard",value:function(){return this._element.querySelector(".element__image").alt="Card contendo a foto e o titulo de ".concat(this._imageTitle),this._element.querySelector(".element__image").src=this._imageLink,this._element.querySelector(".element__title").textContent=this._imageTitle,this._element}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),k=document.querySelector(".modal__input_name"),j=document.querySelector(".modal__input_job"),L=document.querySelector(".profile__name"),O=document.querySelector(".profile__about");function P(e){e.classList.toggle("page_opacity")}function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var T=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nameInput=t,this.jobInput=n,this.nameField=r,this.jobField=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.nameInput.value,job:this.jobInput.value}}},{key:"setUserInfo",value:function(e,t){this.nameField.textContent=e,this.jobField.textContent=t}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){e.preventDefault();var t=new T(k,j,L,O),n=t.getUserInfo();t.setUserInfo(n.name,n.job)}function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.form=t,this.inputList=Array.from(t.querySelectorAll(".modal__input")),this.buttonElement=t.querySelector(".modal__button"),this.errorMessages={valueMissing:"Campo é obrigatório.",typeMismatch:"Por favor, insira um endereço web",tooShort:"Aumente esse texto para 2 caracteres ou mais."}}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this.form.querySelector(".".concat(e.id,"-error"));e.classList.add("modal__input_type_error"),n.textContent=t,n.classList.add("modal__input-error_active")}},{key:"_hideInputError",value:function(e){var t=this.form.querySelector(".".concat(e.id,"-error"));e.classList.remove("modal__input_type_error"),t.classList.remove("modal__input-error_active"),t.textContent=""}},{key:"_isValid",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=Object.keys(this.errorMessages).find((function(t){return e.validity[t]}));this._showInputError(e,t?this.errorMessages[t]:"Verifique os campos digitados.")}}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.buttonElement.classList.add("button__inactive"):this.buttonElement.classList.remove("button__inactive")}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===B(o)?o:String(o)),r)}var o}var D=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==M(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===M(o)?o:String(o)),r)}var o}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function G(e,t){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},G(e,t)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).submitCallback=t,n.form=n.selector.querySelector(".modal__form"),n.closeButton=n.selector.querySelector(".modal__button-close"),n.formValidator=new A(n.form),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this.form.querySelectorAll(".modal__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){U(K(u.prototype),"open",this).call(this),this.formValidator.resetValidation()}},{key:"setEventListeners",value:function(){var e=this;U(K(u.prototype),"setEventListeners",this).call(this),this.closeButton.addEventListener("click",(function(){e.close()}))}},{key:"close",value:function(){U(K(u.prototype),"close",this).call(this),this.form.reset()}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a),z=document.querySelector(".button-edit"),H=document.querySelector(".modal__button-close"),J=document.querySelector(".page"),Q=new N(".modal",I),W=new N(".modal-add",I),X=new p(".modal-image");z.addEventListener("click",(function(){P(J),Q.open()})),H.addEventListener("click",(function(){P(J),Q.close()}));var Y=document.querySelector(".button-add"),Z=document.querySelector(".button-close");Y.addEventListener("click",(function(){P(J),W.open()})),Z.addEventListener("click",(function(){P(J),W.close()}));var $=document.querySelector(".modal__form");$.addEventListener("submit",(function(e){I(e),Q.close(),P(J)}));var ee=new D({items:[{name:"Grand Kanyon",link:r},{name:"Dallas Airport",link:t},{name:"Golden Gate",link:n},{name:"Miami",link:o},{name:"Statue of Liberty",link:i},{name:"Lake Tahoe",link:u}],renderer:function(e){var t=new E(e.link,e.name).generateCard();ee.addItem(t)}},".elements");ee.render();var te=document.querySelector(".modal-add"),ne=document.querySelector(".modal__form_add");te.addEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector(".modal__input_title"),n=document.querySelector(".modal__input_link"),r=new E(n.value,t.value).generateCard();document.querySelector(".elements").prepend(r),W.close(),P(J),ne.reset()})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&(Q._handleEscClose(),W._handleEscClose(),X.close())})),J.addEventListener("mouseup",(function(e){Q.setEventListeners(),W.setEventListeners(),X.close()})),z.removeEventListener("click",(function(){P(J),Q.open()})),H.removeEventListener("click",(function(){P(J),Q.close()})),Y.removeEventListener("click",(function(){P(J),W.open()})),Z.removeEventListener("click",(function(){P(J),W.close()})),$.removeEventListener("submit",(function(e){I(e),Q.close(),P(J)})),te.removeEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector(".modal__input_title"),n=document.querySelector(".modal__input_link"),r=new E(n.value,t.value).generateCard();document.querySelector(".elements").prepend(r),W.close(),P(J),ne.reset()})),document.removeEventListener("keydown",(function(e){"Escape"===e.key&&(Q._handleEscClose(),W._handleEscClose(),X.close())})),J.removeEventListener("mouseup",(function(e){Q.setEventListeners(),W.setEventListeners(),X.close()})),Array.from(document.querySelectorAll(".modal__form")).forEach((function(e){new A(e).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
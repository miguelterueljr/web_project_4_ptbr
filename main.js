!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},p:""};e.d({},{M:function(){return J}});var t=e.p+"57b0e94d1f56f5818193.jpg",n=e.p+"5d857cfbb2261e7c3927.png",r=e.p+"480362b8a46058446c75.jpg",o=e.p+"f0fc0e9e5ca3cbf0844c.jpg",i=e.p+"7ba2b86cd65744fa6c26.jpg",u=e.p+"b264bbbfba5cfb586e75.webp";function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.selector=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this.selector.classList.add("modal-opened")}},{key:"close",value:function(){this.selector.classList.remove("modal-opened")}},{key:"_handleEscClose",value:function(){this.close(),J.classList.remove("page_opacity")}},{key:"setEventListeners",value:function(){this.close(),J.classList.remove("page_opacity")}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(n=[{key:"open",value:function(){this.selector.classList.add("modal-image__active")}},{key:"close",value:function(){this.selector.classList.remove("modal-image__active")}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==v(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===v(o)?o:String(o)),r)}var o}var b=document.querySelector(".modal-image"),_=document.querySelector(".modal-image__image"),h=document.querySelector(".modal-image__button"),g=document.querySelector(".modal-image__title"),S=document.querySelector(".page"),w=new p(".modal-image"),E=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._imageLink=t,this._imageTitle=n,this._element=this._getTemplate(),this._setEventListeners()}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(".card-template").content.querySelector(".element").cloneNode(!0)}},{key:"handleClick",value:function(){var e=this._element.querySelector(".element__image").getAttribute("src");_.setAttribute("src",e);var t=this._element.querySelector(".element__image").getAttribute("alt");_.setAttribute("alt",t);var n=this._element.querySelector(".element__title").textContent;g.textContent=n,w.open(),S.classList.add("page_opacity")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button_image").addEventListener("click",(function(e){e.target.classList.toggle("element__button_active")})),this._element.querySelector(".element__delete").addEventListener("click",(function(){e._element.remove()})),this._element.querySelector(".element__image").addEventListener("click",this.handleClick.bind(this)),h.addEventListener("click",(function(){b.classList.remove("modal-image__active"),S.classList.remove("page_opacity")}))}},{key:"generateCard",value:function(){return this._element.querySelector(".element__image").alt="Card contendo a foto e o titulo de ".concat(this._imageTitle),this._element.querySelector(".element__image").src=this._imageLink,this._element.querySelector(".element__title").textContent=this._imageTitle,this._element}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),k=document.querySelector(".modal__input_name"),j=document.querySelector(".modal__input_job"),L=document.querySelector(".profile__name"),O=document.querySelector(".profile__about");function P(e){e.classList.toggle("page_opacity")}function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var T=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nameInput=t,this.jobInput=n,this.nameField=r,this.jobField=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.nameInput.value,job:this.jobInput.value}}},{key:"setUserInfo",value:function(e,t){this.nameField.textContent=e,this.jobField.textContent=t}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){e.preventDefault();var t=new T(k,j,L,O),n=t.getUserInfo();t.setUserInfo(n.name,n.job)}function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.form=t,this.inputList=Array.from(t.querySelectorAll(".modal__input")),this.buttonElement=t.querySelector(".modal__button"),this.errorMessages={valueMissing:"Campo é obrigatório.",typeMismatch:"Por favor, insira um endereço web",tooShort:"Aumente esse texto para 2 caracteres ou mais."}}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this.form.querySelector(".".concat(e.id,"-error"));e.classList.add("modal__input_type_error"),n.textContent=t,n.classList.add("modal__input-error_active")}},{key:"_hideInputError",value:function(e){var t=this.form.querySelector(".".concat(e.id,"-error"));e.classList.remove("modal__input_type_error"),t.classList.remove("modal__input-error_active"),t.textContent=""}},{key:"_isValid",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=Object.keys(this.errorMessages).find((function(t){return e.validity[t]}));this._showInputError(e,t?this.errorMessages[t]:"Verifique os campos digitados.")}}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.buttonElement.classList.add("button__inactive"):this.buttonElement.classList.remove("button__inactive")}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===B(o)?o:String(o)),r)}var o}var D=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==M(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===M(o)?o:String(o)),r)}var o}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function G(e,t){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},G(e,t)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).submitCallback=t,n.form=n.selector.querySelector(".modal__form"),n.closeButton=n.selector.querySelector(".modal__button-close"),n.formValidator=new A(n.form),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this.form.querySelectorAll(".modal__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){U(K(u.prototype),"open",this).call(this),this.formValidator.resetValidation()}},{key:"setEventListeners",value:function(){var e=this;U(K(u.prototype),"setEventListeners",this).call(this),this.closeButton.addEventListener("click",(function(){e.close()}))}},{key:"close",value:function(){U(K(u.prototype),"close",this).call(this),this.form.reset()}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a),z=document.querySelector(".button-edit"),H=document.querySelector(".modal__button-close"),J=document.querySelector(".page"),Q=new N(".modal",I),W=new N(".modal-add",I),X=new p(".modal-image");z.addEventListener("click",(function(){P(J),Q.open()})),H.addEventListener("click",(function(){P(J),Q.close()}));var Y=document.querySelector(".button-add"),Z=document.querySelector(".button-close");Y.addEventListener("click",(function(){P(J),W.open()})),Z.addEventListener("click",(function(){P(J),W.close()}));var $=document.querySelector(".modal__form");$.addEventListener("submit",(function(e){I(e),Q.close(),P(J)}));var ee=new D({items:[{name:"Grand Kanyon",link:r},{name:"Dallas Airport",link:t},{name:"Golden Gate",link:n},{name:"Miami",link:o},{name:"Statue of Liberty",link:i},{name:"Lake Tahoe",link:u}],renderer:function(e){var t=new E(e.link,e.name).generateCard();ee.addItem(t)}},".elements");ee.render();var te=document.querySelector(".modal-add"),ne=document.querySelector(".modal__form_add");te.addEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector(".modal__input_title"),n=document.querySelector(".modal__input_link"),r=new E(n.value,t.value).generateCard();document.querySelector(".elements").prepend(r),W.close(),P(J),ne.reset()})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&(Q._handleEscClose(),W._handleEscClose(),X.close())})),J.addEventListener("mouseup",(function(e){Q.setEventListeners(),W.setEventListeners(),X.close()})),z.removeEventListener("click",(function(){P(J),Q.open()})),H.removeEventListener("click",(function(){P(J),Q.close()})),Y.removeEventListener("click",(function(){P(J),W.open()})),Z.removeEventListener("click",(function(){P(J),W.close()})),$.removeEventListener("submit",(function(e){I(e),Q.close(),P(J)})),te.removeEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector(".modal__input_title"),n=document.querySelector(".modal__input_link"),r=new E(n.value,t.value).generateCard();document.querySelector(".elements").prepend(r),W.close(),P(J),ne.reset()})),document.removeEventListener("keydown",(function(e){"Escape"===e.key&&(Q._handleEscClose(),W._handleEscClose(),X.close())})),J.removeEventListener("mouseup",(function(e){Q.setEventListeners(),W.setEventListeners(),X.close()})),Array.from(document.querySelectorAll(".modal__form")).forEach((function(e){new A(e).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QzFCeUUsa0JBQ1osRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIGRlZmluaXRpb24pIHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfSIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiaW1wb3J0IHsgcGFnZSB9IGZyb20gXCIuLi9wYWdlc1wiO1xyXG5cclxuLy9jbGFzc2UgcmVzcG9uc2F2ZWwgcGFyYSBmYXplciBhYnJpciBvcyBtb2RhaXNcclxuZXhwb3J0IGNsYXNzIFBvcHVwIHtcclxuICAvL3VtIHBhcmFtZXRybyBxdWUgw6kgbyBzZWxldG9yIGNzc1xyXG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLnNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5zZWxlY3Rvci5jbGFzc0xpc3QuYWRkKCdtb2RhbC1vcGVuZWQnKTtcclxuICB9XHJcblxyXG4gIGNsb3NlICgpIHtcclxuICAgIHRoaXMuc2VsZWN0b3IuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtb3BlbmVkJyk7XHJcbiAgfVxyXG5cclxuICAvL2ZlY2hhIG1vZGFsIHFuZCBhcGVydG8gZXNjXHJcbiAgX2hhbmRsZUVzY0Nsb3NlICgpIHtcclxuICAgIHRoaXMuY2xvc2UoKVxyXG4gICAgXHJcbiAgICBwYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ3BhZ2Vfb3BhY2l0eScpO1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICAvL2ZlY2hhIG8gbW9kYWwgcXVhbmRvIGNsaWNhciBmb3JhIGRlbGVcclxuICBzZXRFdmVudExpc3RlbmVycyAoKSB7XHJcbiAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICBwYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ3BhZ2Vfb3BhY2l0eScpO1xyXG4gICAgXHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gIH1cclxuICAvL2FsdGVyZWkgbyBtZXRvZG8gb3BlbiBkbyBwYWkgcGFyYSBhcGVuYXMgc3Vic3RpdHVpciBhIGNsYXNzZVxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLnNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoJ21vZGFsLWltYWdlX19hY3RpdmUnKTsgIFxyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLnNlbGVjdG9yLmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLWltYWdlX19hY3RpdmUnKTtcclxuICB9XHJcblxyXG59XHJcblxyXG4iLCJpbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gXCIuL1BvcHVwV2l0aEltYWdlXCI7XHJcblxyXG5jb25zdCBtb2RhbEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWltYWdlJyk7XHJcbmNvbnN0IG1vZGFsSW1nRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1pbWFnZV9faW1hZ2UnKTtcclxuY29uc3QgYnRuQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtaW1hZ2VfX2J1dHRvbicpO1xyXG5jb25zdCBtb2RhbFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWltYWdlX190aXRsZScpO1xyXG5jb25zdCBwYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKTtcclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5tb2RhbC1pbWFnZScpO1xyXG5cclxuZXhwb3J0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGltYWdlTGluaywgaW1hZ2VUaXRsZSkge1xyXG4gICAgdGhpcy5faW1hZ2VMaW5rID0gaW1hZ2VMaW5rO1xyXG4gICAgdGhpcy5faW1hZ2VUaXRsZSA9IGltYWdlVGl0bGU7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcuY2FyZC10ZW1wbGF0ZScpXHJcbiAgICAgIC5jb250ZW50IFxyXG4gICAgICAucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIGhhbmRsZUNsaWNrKCkge1xyXG4gICAgY29uc3Qgc3JjVmFsID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKS5nZXRBdHRyaWJ1dGUoJ3NyYycpO1xyXG4gICAgbW9kYWxJbWdFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3JjJywgc3JjVmFsKTtcclxuICAgIGNvbnN0IGltZ0FsdCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuZ2V0QXR0cmlidXRlKCdhbHQnKTtcclxuICAgIG1vZGFsSW1nRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FsdCcsIGltZ0FsdCk7XHJcbiAgICBjb25zdCBpbWFnZVRpdGxlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdGl0bGUnKS50ZXh0Q29udGVudDtcclxuICAgIG1vZGFsVGl0bGUudGV4dENvbnRlbnQgPSBpbWFnZVRpdGxlO1xyXG5cclxuICAgIHBvcHVwV2l0aEltYWdlLm9wZW4oKTtcclxuICAgIHBhZ2UuY2xhc3NMaXN0LmFkZCgncGFnZV9vcGFjaXR5Jyk7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19idXR0b25faW1hZ2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKCdlbGVtZW50X19idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgIFxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fZGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICBidG5DbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgbW9kYWxJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC1pbWFnZV9fYWN0aXZlJyk7XHJcbiAgICAgIHBhZ2UuY2xhc3NMaXN0LnJlbW92ZSgncGFnZV9vcGFjaXR5Jyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuYWx0ID0gYENhcmQgY29udGVuZG8gYSBmb3RvIGUgbyB0aXR1bG8gZGUgJHt0aGlzLl9pbWFnZVRpdGxlfWA7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpLnNyYyA9IHRoaXMuX2ltYWdlTGluaztcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9pbWFnZVRpdGxlO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufVxyXG4iLCIvKnZhcmlhdmVpcyBhYmFpeG8gZXUgcGVnbyBvcyByZXNwZWN0aXZvcyBpbnB1dHMgZG8gZm9ybXVsw6FyaW8qL1xyXG5leHBvcnQgY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19pbnB1dF9uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBqb2JJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9faW5wdXRfam9iJyk7XHJcblxyXG4vKnZhcmlhdmVpcyBxdWUgcGVnYW0gb3MgbG9jYWlzIGRvIGh0bWwgYW9uZGUgc2VyYW8gc2Fsdm9zIG9zIGRhZG9zIGRvIGVkaXQgcHJvZmlsZSovXHJcbmV4cG9ydCBjb25zdCBuYW1lRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpXHJcbmV4cG9ydCBjb25zdCBqb2JGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hYm91dCcpXHJcblxyXG4vL0Z1bsOnw6NvIHBhcmEgZmF6ZXIgYSBwYWdpbmEgZmljYXIgb3BhY2EgcXVhbmRvIG8gbW9kYWwgZm9yIGFiZXJ0by5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZVBhZ2VPcGFjaXR5IChwYWdlKSB7XHJcbiAgcGFnZS5jbGFzc0xpc3QudG9nZ2xlKCdwYWdlX29wYWNpdHknKTtcclxufSIsImltcG9ydCB7IG5hbWVJbnB1dCwgam9iSW5wdXQsIG5hbWVGaWVsZCwgam9iRmllbGQgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuXHJcbi8vIGNsYXNzZSBVc2VySW5mbywgcmVzcG9uc8OhdmVsIHBvciByZW5kZXJpemFyIGEgaW5mb3JtYcOnw6NvIHNvYnJlIG8gdXN1w6FyaW8gbmEgcMOhZ2luYVxyXG5leHBvcnQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWVJbnB1dCwgam9iSW5wdXQsIG5hbWVGaWVsZCwgam9iRmllbGQpIHtcclxuICAgIHRoaXMubmFtZUlucHV0ID0gbmFtZUlucHV0O1xyXG4gICAgdGhpcy5qb2JJbnB1dCA9IGpvYklucHV0O1xyXG4gICAgdGhpcy5uYW1lRmllbGQgPSBuYW1lRmllbGQ7XHJcbiAgICB0aGlzLmpvYkZpZWxkID0gam9iRmllbGQ7XHJcbiAgfVxyXG5cclxuICAvLyBtw6l0b2RvIHDDumJsaWNvIHF1ZSByZXRvcm5hIHVtIG9iamV0byBjb20gaW5mb3JtYcOnw7VlcyBzb2JyZSBvIHVzdcOhcmlvXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLm5hbWVJbnB1dC52YWx1ZSxcclxuICAgICAgam9iOiB0aGlzLmpvYklucHV0LnZhbHVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gbcOpdG9kbyBww7pibGljbyBxdWUgcGVnYSBub3ZvcyBkYWRvcyBkbyB1c3XDoXJpbyBlIGFkaWNpb25hIG5hIHDDoWdpbmFcclxuICBzZXRVc2VySW5mbyhuYW1lLCBqb2IpIHtcclxuICAgIHRoaXMubmFtZUZpZWxkLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuam9iRmllbGQudGV4dENvbnRlbnQgPSBqb2I7XHJcbiAgfVxyXG59XHJcbiBcclxuLy9mdW5jYW8gcGFyYSBib3RhbyBzYWxiYXIgZG8gbW9kYWwgZWRpdFxyXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQoZXZ0KSB7XHJcbiAgLy9saW5oYSBhYmFpeG8gcHJldmluZSBxdWUgbyBib3RhbyBlbnZpZSBvIGZvcm11bGFyaW8gZGEgZm9ybWEgcGFkcmFvXHJcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gIC8qdmFyacOhdmVsIHF1ZSByZWNlYmUgdW1hIGluc3TDom5jaWEgZGEgY2xhc3NlIFVzZXJJbmZvKi9cclxuICBjb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhuYW1lSW5wdXQsIGpvYklucHV0LCBuYW1lRmllbGQsIGpvYkZpZWxkKTtcclxuXHJcbiAgLypjaGFtYSBvIG3DqXRvZG8gZ2V0VXNlckluZm8gZGEgaW5zdMOibmNpYSB1c2VySW5mbyovXHJcbiAgY29uc3QgdXNlckluZm9EYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuXHJcbiAgLypjaGFtYSBvIG3DqXRvZG8gc2V0VXNlckluZm8gZGEgaW5zdMOibmNpYSB1c2VySW5mbyovXHJcbiAgdXNlckluZm8uc2V0VXNlckluZm8odXNlckluZm9EYXRhLm5hbWUsIHVzZXJJbmZvRGF0YS5qb2IpO1xyXG59IiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKGZvcm0pIHtcclxuICAgIHRoaXMuZm9ybSA9IGZvcm07XHJcbiAgICB0aGlzLmlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWxfX2lucHV0JykpO1xyXG4gICAgdGhpcy5idXR0b25FbGVtZW50ID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2J1dHRvbicpO1xyXG4gICAgdGhpcy5lcnJvck1lc3NhZ2VzID0ge1xyXG4gICAgICB2YWx1ZU1pc3Npbmc6ICdDYW1wbyDDqSBvYnJpZ2F0w7NyaW8uJyxcclxuICAgICAgdHlwZU1pc21hdGNoOiAnUG9yIGZhdm9yLCBpbnNpcmEgdW0gZW5kZXJlw6dvIHdlYicsXHJcbiAgICAgIHRvb1Nob3J0OiAnQXVtZW50ZSBlc3NlIHRleHRvIHBhcmEgMiBjYXJhY3RlcmVzIG91IG1haXMuJyxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBGdW7Dp8OjbyBxdWUgbW9zdHJhIGVsZW1lbnRvIGRlIGVycm9cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7IFxyXG5cclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtb2RhbF9faW5wdXRfdHlwZV9lcnJvcicpOyBcclxuXHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7IFxyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21vZGFsX19pbnB1dC1lcnJvcl9hY3RpdmUnKTsgXHJcbiAgfVxyXG5cclxuICAvLyBGdW7Dp8OjbyBxdWUgb2N1bGRhIGVsZW1lbnRvIGRlIGVycm9cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLmZvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApOyBcclxuXHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWxfX2lucHV0X3R5cGVfZXJyb3InKTsgXHJcblxyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsX19pbnB1dC1lcnJvcl9hY3RpdmUnKTsgXHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJzsgXHJcbiAgfVxyXG5cclxuICAvLyBGdW7Dp8OjbyB2ZXJpZmljYSBzZSBvIGNhbXBvIMOpIHZhbGlkb1xyXG4gIF9pc1ZhbGlkKGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHsgXHJcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IE9iamVjdC5rZXlzKHRoaXMuZXJyb3JNZXNzYWdlcykuZmluZChlcnJvcktleSA9PiBpbnB1dEVsZW1lbnQudmFsaWRpdHlbZXJyb3JLZXldKTtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UgPyB0aGlzLmVycm9yTWVzc2FnZXNbZXJyb3JNZXNzYWdlXSA6ICdWZXJpZmlxdWUgb3MgY2FtcG9zIGRpZ2l0YWRvcy4nKTtcclxuICAgIH0gZWxzZSB7IFxyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpOyBcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEZ1bsOnw6NvIHBhcmEgYXRpdmFyIG8gZGVzYXRpdmFyIG1ldSBib3RhbyBkZXBlbmRlbmRvIGRhIHZhbGRpYWNhbyBkbyBmb3JtdWxhcmlvXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2J1dHRvbl9faW5hY3RpdmUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdidXR0b25fX2luYWN0aXZlJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBGdW7Dp8OjbyB2ZXJpZmljYSBzZSB0b2RvcyBvcyBpbnB1dHMgZXN0w6NvIHZhbGlkb3MuIHJldG9ybmEgdHJ1ZSBzZSB1bSBjYW1wbyBmb3IgaW52YWxpZG9cclxuICAvLyBtZSBzaW5hbGl6YXJhIHNlIGZvciB0cnVlIHByYSBib3RhbyBmaWNhciBpbnZhbGlkb1xyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgLy8gTcOpdG9kbyBwYXJhIGFkaWNvbmFyIGVzY3V0YWRvcyBkZSBldmVudG9zIGEgdG9kb3Mgb3MgY2FtcG9zIGRlIGlucHV0XHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICAvLyBJdGVyYSBzb2JyZSBhcnJheVxyXG4gICAgdGhpcy5pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9pc1ZhbGlkKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIE3DqXRvZG8gcGFyYSBoYWJpbGl0YXIgdmFsaWRhw6fDo28gZG8gZm9ybXVsw6FyaW9cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KClcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICAvL23DqXRvZG8gcXVlIGZheiBvIGZvcm11bGFyaW8gcmVzZXRhciBzdWEgdmFsaWRhw6fDo29cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLmlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4iLCJleHBvcnQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBzdWJtaXRDYWxsYmFjaykge1xyXG4gICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gICAgdGhpcy5zdWJtaXRDYWxsYmFjayA9IHN1Ym1pdENhbGxiYWNrO1xyXG4gICAgdGhpcy5mb3JtID0gdGhpcy5zZWxlY3Rvci5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Zvcm0nKTtcclxuICAgIHRoaXMuY2xvc2VCdXR0b24gPSB0aGlzLnNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fYnV0dG9uLWNsb3NlJyk7XHJcbiAgICB0aGlzLmZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih0aGlzLmZvcm0pO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRMaXN0ID0gdGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbF9faW5wdXQnKTtcclxuICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB7fTtcclxuICAgIGlucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZm9ybVZhbHVlcztcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLmZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7IC8vbWV0b2RvIHF1ZSBmYXogY29tIHF1ZSB0b2RhIHZleiBxdWUgYWJyaXIgbyBtb2RhbCBldSByZXNldGFyIGEgdmFsaWRhw6fDo29cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCJcclxuXHJcbmltcG9ydCBkYWxsYXMgZnJvbSBcIi4uL2ltYWdlcy9kYWxsYXMtYWlycG9ydC5qcGdcIjtcclxuaW1wb3J0IGdvbGRlbiBmcm9tIFwiLi4vaW1hZ2VzL2dvbGRlbi1nYXRlLnBuZ1wiXHJcbmltcG9ydCBncmFuZENhbnlvbiBmcm9tIFwiLi4vaW1hZ2VzL2dyYW5kLWNhbnlvbi5qcGdcIlxyXG5pbXBvcnQgbWlhbWkgZnJvbSBcIi4uL2ltYWdlcy9taWFtaS5qcGdcIlxyXG5pbXBvcnQgc3RhdHVlT2ZMaWJlcnR5IGZyb20gXCIuLi9pbWFnZXMvc3RhdHVlLW9mLWxpYmVydHkuanBnXCI7XHJcbmltcG9ydCB0YWhvZUxha2UgZnJvbSBcIi4uL2ltYWdlcy90YWhvZS1sYWtlLndlYnBcIjtcclxuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmRcIjtcclxuaW1wb3J0IHsgdG9nZ2xlUGFnZU9wYWNpdHkgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuaW1wb3J0IHsgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mb1wiO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlXCI7XHJcblxyXG5jb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1lZGl0Jyk7XHJcbmNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19idXR0b24tY2xvc2UnKTtcclxuZXhwb3J0IGNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpO1xyXG5jb25zdCBvcGVuTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLm1vZGFsJywgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQpO1xyXG5jb25zdCBvcGVuTW9kYWxBZGQgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLm1vZGFsLWFkZCcsIGhhbmRsZVByb2ZpbGVGb3JtU3VibWl0KTtcclxuY29uc3Qgb3Blbk1vZGFsSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5tb2RhbC1pbWFnZScpO1xyXG5cclxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICB0b2dnbGVQYWdlT3BhY2l0eShwYWdlKTtcclxuICBvcGVuTW9kYWwub3BlbigpO1xyXG59KTtcclxuXHJcbmNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG4gIG9wZW5Nb2RhbC5jbG9zZSgpO1xyXG59KTtcclxuXHJcbmNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tYWRkJyk7XHJcbmNvbnN0IGJ1dHRvbkNsb3NlQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1jbG9zZScpO1xyXG5cclxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG4gIG9wZW5Nb2RhbEFkZC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYnV0dG9uQ2xvc2VBZGQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgdG9nZ2xlUGFnZU9wYWNpdHkocGFnZSk7XHJcbiAgb3Blbk1vZGFsQWRkLmNsb3NlKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Zvcm0nKTtcclxuXHJcbmZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdChldnQpO1xyXG4gIG9wZW5Nb2RhbC5jbG9zZSgpO1xyXG4gIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG59KTtcclxuXHJcbmNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIkdyYW5kIEthbnlvblwiLFxyXG4gICAgbGluazogZ3JhbmRDYW55b25cclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiRGFsbGFzIEFpcnBvcnRcIixcclxuICAgIGxpbms6IGRhbGxhc1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJHb2xkZW4gR2F0ZVwiLFxyXG4gICAgbGluazogZ29sZGVuXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIk1pYW1pXCIsXHJcbiAgICBsaW5rOiBtaWFtaVxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJTdGF0dWUgb2YgTGliZXJ0eVwiLFxyXG4gICAgbGluazogc3RhdHVlT2ZMaWJlcnR5XHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgVGFob2VcIixcclxuICAgIGxpbms6IHRhaG9lTGFrZVxyXG4gIH1cclxuXVxyXG5cclxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxyXG4gICAgcmVuZGVyZXI6IGl0ZW0gPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbS5saW5rLCBpdGVtLm5hbWUpO1xyXG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgJy5lbGVtZW50cydcclxuKTtcclxuXHJcbmNhcmRMaXN0LnJlbmRlcigpO1xyXG5cclxuY29uc3QgbW9kYWxGb3JtQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWFkZCcpO1xyXG5jb25zdCBmb3JtQWRkSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Zvcm1fYWRkJyk7XHJcblxyXG5tb2RhbEZvcm1BZGQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGNvbnN0IGltYWdlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9faW5wdXRfdGl0bGUnKTtcclxuICBjb25zdCBpbWFnZUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2lucHV0X2xpbmsnKTtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoaW1hZ2VMaW5rLnZhbHVlLCBpbWFnZU5hbWUudmFsdWUpO1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHMnKS5wcmVwZW5kKGNhcmRFbGVtZW50KTtcclxuICBvcGVuTW9kYWxBZGQuY2xvc2UoKTtcclxuICB0b2dnbGVQYWdlT3BhY2l0eShwYWdlKTtcclxuXHJcbiAgZm9ybUFkZEltYWdlLnJlc2V0KClcclxufSk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2dCkgPT4ge1xyXG4gIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICBvcGVuTW9kYWwuX2hhbmRsZUVzY0Nsb3NlKCk7XHJcbiAgICBvcGVuTW9kYWxBZGQuX2hhbmRsZUVzY0Nsb3NlKCk7XHJcbiAgICBvcGVuTW9kYWxJbWFnZS5jbG9zZSgpO1xyXG4gIH1cclxufSk7XHJcblxyXG5wYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCAoZXZ0KSA9PiB7XHJcbiAgb3Blbk1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgb3Blbk1vZGFsQWRkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgb3Blbk1vZGFsSW1hZ2UuY2xvc2UoKTtcclxufSk7XHJcblxyXG5jb25zdCByZW1vdmVFdmVudExpc3RlbmVycyA9ICgpID0+IHtcclxuICBlZGl0QnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgdG9nZ2xlUGFnZU9wYWNpdHkocGFnZSk7XHJcbiAgICBvcGVuTW9kYWwub3BlbigpO1xyXG4gIH0pO1xyXG5cclxuICBjbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG4gICAgb3Blbk1vZGFsLmNsb3NlKCk7XHJcbiAgfSk7XHJcblxyXG4gIGFkZEJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG4gICAgb3Blbk1vZGFsQWRkLm9wZW4oKTtcclxuICB9KTtcclxuXHJcbiAgYnV0dG9uQ2xvc2VBZGQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICB0b2dnbGVQYWdlT3BhY2l0eShwYWdlKTtcclxuICAgIG9wZW5Nb2RhbEFkZC5jbG9zZSgpO1xyXG4gIH0pO1xyXG5cclxuICBmb3JtRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdChldnQpO1xyXG4gICAgb3Blbk1vZGFsLmNsb3NlKCk7XHJcbiAgICB0b2dnbGVQYWdlT3BhY2l0eShwYWdlKTtcclxuICB9KTtcclxuXHJcbiAgbW9kYWxGb3JtQWRkLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgY29uc3QgaW1hZ2VOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19pbnB1dF90aXRsZScpO1xyXG4gICAgY29uc3QgaW1hZ2VMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19pbnB1dF9saW5rJyk7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoaW1hZ2VMaW5rLnZhbHVlLCBpbWFnZU5hbWUudmFsdWUpO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzJykucHJlcGVuZChjYXJkRWxlbWVudCk7XHJcbiAgICBvcGVuTW9kYWxBZGQuY2xvc2UoKTtcclxuICAgIHRvZ2dsZVBhZ2VPcGFjaXR5KHBhZ2UpO1xyXG5cclxuICAgIGZvcm1BZGRJbWFnZS5yZXNldCgpO1xyXG4gIH0pO1xyXG5cclxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgb3Blbk1vZGFsLl9oYW5kbGVFc2NDbG9zZSgpO1xyXG4gICAgICBvcGVuTW9kYWxBZGQuX2hhbmRsZUVzY0Nsb3NlKCk7XHJcbiAgICAgIG9wZW5Nb2RhbEltYWdlLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHBhZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChldnQpID0+IHtcclxuICAgIG9wZW5Nb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgb3Blbk1vZGFsQWRkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICBvcGVuTW9kYWxJbWFnZS5jbG9zZSgpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIEluc3RhbmNpYSBhIGNsYXNzZSBGb3JtVmFsaWRhdG9yIHBhcmEgY2FkYSBmb3JtdWzDoXJpbyBlbmNvbnRyYWRvIG5hIHDDoWdpbmFcclxuY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbF9fZm9ybScpKTtcclxuXHJcbmZvcm1MaXN0LmZvckVhY2goKGZvcm0pID0+IHtcclxuICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtKTtcclxuICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiUG9wdXAiLCJzZWxlY3RvciIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ2YWx1ZSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImNsb3NlIiwicGFnZSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwibW9kYWxJbWFnZSIsIm1vZGFsSW1nRWxlbWVudCIsImJ0bkNsb3NlIiwibW9kYWxUaXRsZSIsInBvcHVwV2l0aEltYWdlIiwiQ2FyZCIsImltYWdlTGluayIsImltYWdlVGl0bGUiLCJfaW1hZ2VMaW5rIiwiX2ltYWdlVGl0bGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJzcmNWYWwiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJpbWdBbHQiLCJ0ZXh0Q29udGVudCIsIm9wZW4iLCJfdGhpcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJ0b2dnbGUiLCJoYW5kbGVDbGljayIsImJpbmQiLCJhbHQiLCJjb25jYXQiLCJzcmMiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsIm5hbWVGaWVsZCIsImpvYkZpZWxkIiwidG9nZ2xlUGFnZU9wYWNpdHkiLCJVc2VySW5mbyIsIm5hbWUiLCJqb2IiLCJoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCIsInByZXZlbnREZWZhdWx0IiwidXNlckluZm8iLCJ1c2VySW5mb0RhdGEiLCJnZXRVc2VySW5mbyIsInNldFVzZXJJbmZvIiwiRm9ybVZhbGlkYXRvciIsImZvcm0iLCJpbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uRWxlbWVudCIsImVycm9yTWVzc2FnZXMiLCJ2YWx1ZU1pc3NpbmciLCJ0eXBlTWlzbWF0Y2giLCJ0b29TaG9ydCIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsImtleXMiLCJmaW5kIiwiZXJyb3JLZXkiLCJfc2hvd0lucHV0RXJyb3IiLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfaXNWYWxpZCIsIl90aGlzMiIsIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRDYWxsYmFjayIsImNsb3NlQnV0dG9uIiwiZm9ybVZhbGlkYXRvciIsImZvcm1WYWx1ZXMiLCJpbnB1dCIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJyZXNldFZhbGlkYXRpb24iLCJyZXNldCIsImVkaXRCdXR0b24iLCJvcGVuTW9kYWwiLCJvcGVuTW9kYWxBZGQiLCJvcGVuTW9kYWxJbWFnZSIsImFkZEJ1dHRvbiIsImJ1dHRvbkNsb3NlQWRkIiwiZm9ybUVsZW1lbnQiLCJjYXJkTGlzdCIsImxpbmsiLCJncmFuZENhbnlvbiIsImRhbGxhcyIsImdvbGRlbiIsIm1pYW1pIiwic3RhdHVlT2ZMaWJlcnR5IiwidGFob2VMYWtlIiwiY2FyZEVsZW1lbnQiLCJnZW5lcmF0ZUNhcmQiLCJhZGRJdGVtIiwicmVuZGVyIiwibW9kYWxGb3JtQWRkIiwiZm9ybUFkZEltYWdlIiwiaW1hZ2VOYW1lIiwiX2hhbmRsZUVzY0Nsb3NlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=
!function(){"use strict";var e={d:function(t,n){for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{Z0:function(){return _e},f1:function(){return ge},DV:function(){return ke},vL:function(){return Se},ck:function(){return he}});var t=document.querySelector(".modal__input_name"),n=document.querySelector(".modal__input_job"),o=(document.querySelector(".modal__input_save-photo"),document.querySelector(".profile__name")),r=document.querySelector(".profile__about"),i=document.querySelector(".profile__image");function a(e){e.classList.toggle("page_opacity")}var c="436e74c115dfe006750ac205",u=document.querySelector(".page");function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==l(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===l(r)?r:String(r)),o)}var r}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.selector=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this.selector.classList.add("modal-opened")}},{key:"close",value:function(){this.selector.classList.remove("modal-opened")}},{key:"_handleEscClose",value:function(){this.close(),u.classList.remove("page_opacity")}},{key:"setEventListeners",value:function(){this.close(),u.classList.remove("page_opacity")}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==d(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==d(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===d(r)?r:String(r)),o)}var r}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(o);if(r){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(){this.selector.classList.add("modal-image__active")}},{key:"close",value:function(){this.selector.classList.remove("modal-image__active")}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function b(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,_(o.key),o)}}function _(e){var t=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==h(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===h(t)?t:String(t)}var g=document.querySelector(".modal-image"),S=document.querySelector(".modal-image__image"),k=document.querySelector(".modal-image__button"),E=document.querySelector(".modal-image__title"),w=document.querySelector(".page"),L=new v(".modal-image"),j=document.querySelector(".modal-delete"),C=document.querySelector(".modal__button-close_close"),P=document.querySelector(".modal__button_confirm"),q=function(){function e(t,n,o,r,i){var a,c,u,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a=this,u=function(){l._element.remove(),j.classList.remove("modal_delete"),w.classList.remove("page_opacity"),P.removeEventListener("click",l._handleDelete)},(c=_(c="_handleDelete"))in a?Object.defineProperty(a,c,{value:u,enumerable:!0,configurable:!0,writable:!0}):a[c]=u,this._imageLink=t,this._imageTitle=n,this._element=this._getTemplate(),this._setEventListeners(),this._owner=o,this._id=r,this._likesCount=i,this._isLiked=!1}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(".card-template").content.querySelector(".element").cloneNode(!0)}},{key:"handleClick",value:function(){var e=this._element.querySelector(".element__image").getAttribute("src");S.setAttribute("src",e);var t=this._element.querySelector(".element__image").getAttribute("alt");S.setAttribute("alt",t);var n=this._element.querySelector(".element__title").textContent;E.textContent=n,L.open(),w.classList.add("page_opacity")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button_image").addEventListener("click",(function(t){t.target.classList.toggle("element__button_active"),t.target.classList.contains("element__button_active")?e.addLike():e.removeLike()})),this._element.querySelector(".element__delete").addEventListener("click",(function(){j.classList.add("modal_delete"),w.classList.add("page_opacity"),P.addEventListener("click",(function(){e._handleDelete(),e.deleteCardFromServer()}))})),this._element.querySelector(".element__image").addEventListener("click",this.handleClick.bind(this)),k.addEventListener("click",(function(){g.classList.remove("modal-image__active"),w.classList.remove("page_opacity")})),C.addEventListener("click",(function(){j.classList.remove("modal_delete"),w.classList.remove("page_opacity"),P.removeEventListener("click",e._handleDelete)}))}},{key:"generateCard",value:function(){return this._element.querySelector(".element__image").alt="Card contendo a foto e o titulo de ".concat(this._imageTitle),this._element.querySelector(".element__image").src=this._imageLink,this._element.querySelector(".element__title").textContent=this._imageTitle,this._element.querySelector(".element__delete").dataset.cardId=this._owner._id,this._element.querySelector(".element__delete").dataset.idCard=this._id,this._element.querySelector(".element__number").textContent=this._likesCount,this._element}},{key:"addCardToServer",value:function(){_e({name:this._imageTitle,link:this._imageLink})}},{key:"deleteCardFromServer",value:function(){ge(this._element.querySelector(".element__delete").dataset.idCard)}},{key:"addLike",value:function(){Se(this._id),this._likesCount++,this._updateLikesCount()}},{key:"removeLike",value:function(){ke(this._id),this._likesCount--,this._updateLikesCount()}},{key:"_updateLikesCount",value:function(){this._element.querySelector(".element__number").textContent=this._likesCount}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function T(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==O(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===O(r)?r:String(r)),o)}var r}var I=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.authorization="85c06b76-d1bb-40cc-b9fa-fda6b61002da",this.baseUrl="https://around.nomoreparties.co/v1/web_ptbr_04"}var t,n;return t=e,(n=[{key:"fetchInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:{authorization:this.authorization}}).then((function(e){return e.json()})).catch((function(e){return console.error("Erro ao buscar os cards iniciais:",e),[]}))}},{key:"updateProfilePicture",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return e.json()})).catch((function(e){throw console.error("Erro ao atualizar o avatar:",e),e}))}},{key:"updateProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify(e)}).then((function(e){return e.json()})).catch((function(e){throw console.error("Erro ao atualizar o perfil:",e),e}))}},{key:"getProfile",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{authorization:this.authorization}}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Erro ao carregar as informações do perfil:",e),e}))}},{key:"addCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify(e)}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Erro ao adicionar o card:",e),e}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this.authorization}}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Erro ao excluir o card:",e),e}))}},{key:"addLikeToCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this.authorization}}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Erro ao adicionar curtida ao card:",e),e}))}},{key:"removeLikeFromCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this.authorization}}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(e){throw console.error("Erro ao remover curtida do card:",e),e}))}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function A(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==z(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==z(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===z(r)?r:String(r)),o)}var r}var x=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.api=new I}var a,c;return a=e,(c=[{key:"getUserInfo",value:function(){return{name:t.value,job:n.value}}},{key:"setUserInfo",value:function(e,t,n){o.textContent=e,r.textContent=t,i.src=n}}])&&A(a.prototype,c),Object.defineProperty(a,"prototype",{writable:!1}),e}();function U(e){e.preventDefault();var t=new x,n=t.getUserInfo();t.setUserInfo(n.name,n.job,n.photo),he({name:n.name,about:n.job})}function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function R(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==D(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===D(r)?r:String(r)),o)}var r}var V=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.form=t,this.inputList=Array.from(t.querySelectorAll(".modal__input")),this.buttonElement=t.querySelector(".modal__button"),this.errorMessages={valueMissing:"Campo é obrigatório.",typeMismatch:"Por favor, insira um endereço web",tooShort:"Aumente esse texto para 2 caracteres ou mais."}}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=e.nextElementSibling;e.classList.add("modal__input_type_error"),n.textContent=t,n.classList.add("modal__input-error_active")}},{key:"_hideInputError",value:function(e){var t=e.nextElementSibling;e.classList.remove("modal__input_type_error"),t.classList.remove("modal__input-error_active"),t.textContent=""}},{key:"_isValid",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=Object.keys(this.errorMessages).find((function(t){return e.validity[t]}));this._showInputError(e,t?this.errorMessages[t]:"Verifique os campos digitados.")}}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this.buttonElement.classList.add("button__inactive"),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove("button__inactive"),this.buttonElement.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function F(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==B(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===B(r)?r:String(r)),o)}var r}var M=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function J(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==N(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==N(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===N(r)?r:String(r)),o)}var r}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=$(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},H.apply(this,arguments)}function Z(e,t){return Z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Z(e,t)}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Z(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=$(o);if(r){var n=$(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===N(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).submitCallback=t,n.form=n.selector.querySelector(".modal__form"),n.closeButton=n.selector.querySelector(".modal__button-close"),n.formValidator=new V(n.form),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this.form.querySelectorAll(".modal__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){H($(a.prototype),"open",this).call(this),this.formValidator.resetValidation()}},{key:"setEventListeners",value:function(){var e=this;H($(a.prototype),"setEventListeners",this).call(this),this.closeButton.addEventListener("click",(function(){e.close()}))}},{key:"close",value:function(){H($(a.prototype),"close",this).call(this),this.form.reset()}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var Q=new x;window.addEventListener("DOMContentLoaded",(function(){W.getProfile().then((function(e){var t=e.name,n=e.about,o=e.avatar;Q.setUserInfo(t,n,o)})).catch((function(e){console.error("Erro ao carregar as informações do perfil:",e)}))}));var W=new I,X=[];function Y(){document.querySelectorAll(".element__delete").forEach((function(e){e.dataset.cardId===c&&e.classList.add("element__delete_active")}))}W.fetchInitialCards().then((function(e){var t;X.push.apply(X,function(e){if(Array.isArray(e))return K(e)}(t=e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(e,t){if(e){if("string"==typeof e)return K(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,t):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),e.forEach((function(e){e.owner._id===c&&setTimeout((function(){return Y()}),100)})),ue.render()}));var ee=document.querySelector(".button-edit"),te=document.querySelector(".modal__button-close"),ne=new G(".modal",U),oe=new G(".modal-add",U),re=new v(".modal-image");ee.addEventListener("click",(function(){a(u),ne.open()})),te.addEventListener("click",(function(){a(u),ne.close()}));var ie=document.querySelector(".button-add"),ae=document.querySelector(".button-close");ie.addEventListener("click",(function(){a(u),oe.open()})),ae.addEventListener("click",(function(){a(u),oe.close()}));var ce=document.querySelector(".modal__form");ce.addEventListener("submit",(function(e){U(e),ne.close(),a(u)}));var ue=new M({items:X,renderer:function(e){var t=new q(e.link,e.name,e.owner,e._id,e.likes.length).generateCard();ue.addItem(t)}},".elements"),le=document.querySelector(".modal-add"),se=document.querySelector(".modal__form_add");le.addEventListener("submit",(function(e){e.preventDefault();var t=document.querySelector(".modal__input_title"),n=document.querySelector(".modal__input_link"),o=new q(n.value,t.value,{_id:c});o.addCardToServer();var r=o.generateCard();document.querySelector(".elements").prepend(r),oe.close(),a(u),se.reset()})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&(ne._handleEscClose(),oe._handleEscClose(),re.close())})),u.addEventListener("mouseup",(function(e){ne.setEventListeners(),oe.setEventListeners(),re.close()})),ee.removeEventListener("click",(function(){a(u),ne.open()})),te.removeEventListener("click",(function(){a(u),ne.close()})),ie.removeEventListener("click",(function(){a(u),oe.open()})),ae.removeEventListener("click",(function(){a(u),oe.close()})),ce.removeEventListener("submit",(function(e){U(e),ne.close(),a(u)})),le.removeEventListener("submit",(function(e){e.preventDefault();var t=new q(imageLink.value,imageName.value).generateCard();document.querySelector(".elements").prepend(t),oe.close(),a(u)})),document.removeEventListener("keydown",(function(e){"Escape"===e.key&&(ne._handleEscClose(),oe._handleEscClose(),re.close())})),u.removeEventListener("mouseup",(function(e){ne.setEventListeners(),oe.setEventListeners(),re.close()})),Array.from(document.querySelectorAll(".modal__form")).forEach((function(e){new V(e).enableValidation()}));var fe=document.querySelector(".profile__image-overlay"),de=document.querySelector(".modal_photo");fe.addEventListener("click",(function(){document.querySelector(".modal_photo").classList.add("modal-photo"),u.classList.add("page_opacity")})),document.querySelector(".button-close-photo").addEventListener("click",(function(){de.classList.remove("modal-photo"),u.classList.remove("page_opacity")}));var me=document.querySelector(".profile__image"),ye=document.querySelector(".modal__button_save"),pe=document.querySelector(".modal__input_save-photo"),ve=document.querySelector(".modal__form_editPhoto");function he(e){W.updateProfile(e).then((function(e){console.log("Dados de perfil atualizados:",e),Q.setUserInfo(e.name,e.about,e.avatar)})).catch((function(e){console.error("Erro ao atualizar o perfil:",e)}))}ye.addEventListener("click",(function(){W.updateProfilePicture(pe.value),me.src=pe.value,de.classList.remove("modal-photo"),u.classList.remove("page_opacity"),ve.reset()}));var be=new q;function _e(e){W.addCard(e).then((function(e){console.log("Card added to server:",e),be._id=e.id,be._likesCount=e.likes.length,be._element.querySelector(".element__number").textContent=be._likesCount,Y()})).catch((function(e){console.error("Failed to add card to server:",e)}))}function ge(e){W.deleteCard(e).then((function(e){e.ok?(console.log("Card deleted from server."),be._element.remove()):console.error("Failed to delete card from server:",e.status,e.statusText)})).catch((function(e){console.error("Failed to delete card from server:",e)}))}function Se(e){W.addLikeToCard(e).then((function(e){be._likesCount=e.likes.length,be._updateLikesCount()})).catch((function(e){console.error("Falha ao curtir card: ",e)}))}function ke(e){W.removeLikeFromCard(e).then((function(e){be._likesCount=e.likes.length,be._updateLikesCount(),console.log(be._likesCount)})).catch((function(e){console.error("Failed to remove like from card:",e)}))}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,